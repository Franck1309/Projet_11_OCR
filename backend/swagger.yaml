swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
      # - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/{userId}/transactions:
    get:
    security:
      - Bearer: []
    tags:
      - User Module
    summary: User Profile API
    description: API to retrieve bank transactions
    produces:
      - application/json
    responses:
      "200":
        description: Transactions retrieved successfully
        schema:
          type: object
          properties:
            user:
              type: object
              properties:
                userId:
                  type: string
                  description: The unique identifier for the user.
                  example: "12345"
                transactions:
                  type: array
                  description: List of transactions associated with the user.
                  items:
                    type: object
                    properties:
                      transactionId:
                        type: string
                        description: The unique identifier for the transaction.
                        example: "transaction003"
                      description:
                        type: string
                        description: The description of the transaction.
                        example: "Golden Sun Bakery"
                      amount:
                        type: number
                        description: The amount of the transaction.
                        example: 8.00
                      date:
                        type: string
                        format: date
                        description: The date of the transaction.
                        example: "27/02/2020"
      "400":
        description: Invalid Request
      "500":
        description: Internal Server Error
  /user/{userId}/transactions/{transactionId}:
      patch:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Update Transaction
      description: Update the description of a specific transaction.
      parameters:
        - name: userId
          in: path
          required: true
          description: The unique identifier of the user.
          schema:
            type: string
          example: "12345"
        - name: transactionId
          in: path
          required: true
          description: The unique identifier of the transaction.
          schema:
            type: string
          example: "abc123"
      requestBody:
        description: Updated transaction details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  description: The updated description for the transaction.
                  example: "New description"
              required:
                - description
      responses:
        '200':
          description: Transaction updated successfully
        '400':
          description: Bad Request - Invalid or missing parameters
          content:
            application/json:
              example:
                error: "InvalidRequest"
                message: "One or more parameters are invalid or missing."
        '404':
          description: Not Found - Transaction not found
          content:
            application/json:
              example:
                error: "TransactionNotFound"
                message: "The specified transaction was not found."
        '500':
          description: Internal Server Error - Something went wrong on the server side
          content:
            application/json:
              example:
                error: "InternalServerError"
                message: "An unexpected error occurred on the server. Please try again later."
  Bearer:
    type: apiKey
    name: Authorization
    in: header
  definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
